package Component_v1.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActuators = createDescriptorForActuators();
  /*package*/ final ConceptDescriptor myConceptCentralNode = createDescriptorForCentralNode();
  /*package*/ final ConceptDescriptor myConceptHTypeIF = createDescriptorForHTypeIF();
  /*package*/ final ConceptDescriptor myConceptHardwareComponent = createDescriptorForHardwareComponent();
  /*package*/ final ConceptDescriptor myConceptHardwareComponentInst = createDescriptorForHardwareComponentInst();
  /*package*/ final ConceptDescriptor myConceptHardwareRef = createDescriptorForHardwareRef();
  /*package*/ final ConceptDescriptor myConceptIHardwareComponentInst = createDescriptorForIHardwareComponentInst();
  /*package*/ final ConceptDescriptor myConceptIMobileRobotInst = createDescriptorForIMobileRobotInst();
  /*package*/ final ConceptDescriptor myConceptMobileRobot = createDescriptorForMobileRobot();
  /*package*/ final ConceptDescriptor myConceptMobileRobotInst = createDescriptorForMobileRobotInst();
  /*package*/ final ConceptDescriptor myConceptNFPProfile = createDescriptorForNFPProfile();
  /*package*/ final ConceptDescriptor myConceptNFP_Profile = createDescriptorForNFP_Profile();
  /*package*/ final ConceptDescriptor myConceptNFR = createDescriptorForNFR();
  /*package*/ final ConceptDescriptor myConceptRunTimeNFRsAnnotation = createDescriptorForRunTimeNFRsAnnotation();
  /*package*/ final ConceptDescriptor myConceptSensors = createDescriptorForSensors();
  /*package*/ final ConceptDescriptor myConceptSoftwareComponent = createDescriptorForSoftwareComponent();
  /*package*/ final ConceptDescriptor myConceptSoftwareComponentInst = createDescriptorForSoftwareComponentInst();
  /*package*/ final ConceptDescriptor myConceptSystem = createDescriptorForSystem();
  /*package*/ final ConceptDescriptor myConceptTaskAssociation3 = createDescriptorForTaskAssociation3();
  /*package*/ final ConceptDescriptor myConceptTaskNFRAssociation1 = createDescriptorForTaskNFRAssociation1();
  /*package*/ final ConceptDescriptor myConceptTaskNFRAssociation2 = createDescriptorForTaskNFRAssociation2();
  /*package*/ final EnumerationDescriptor myEnumerationHTypeEnumeration = new EnumerationDescriptor_HTypeEnumeration();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0x4cc0746284b34d01L, 0x8adb629ddd3cebd4L, "Capabilities");
    deps.aggregatedLanguage(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, "Communication");
    deps.aggregatedLanguage(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, "NFR");
    deps.aggregatedLanguage(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, "TaskOperations");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActuators, myConceptCentralNode, myConceptHTypeIF, myConceptHardwareComponent, myConceptHardwareComponentInst, myConceptHardwareRef, myConceptIHardwareComponentInst, myConceptIMobileRobotInst, myConceptMobileRobot, myConceptMobileRobotInst, myConceptNFPProfile, myConceptNFP_Profile, myConceptNFR, myConceptRunTimeNFRsAnnotation, myConceptSensors, myConceptSoftwareComponent, myConceptSoftwareComponentInst, myConceptSystem, myConceptTaskAssociation3, myConceptTaskNFRAssociation1, myConceptTaskNFRAssociation2);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Actuators:
        return myConceptActuators;
      case LanguageConceptSwitch.CentralNode:
        return myConceptCentralNode;
      case LanguageConceptSwitch.HTypeIF:
        return myConceptHTypeIF;
      case LanguageConceptSwitch.HardwareComponent:
        return myConceptHardwareComponent;
      case LanguageConceptSwitch.HardwareComponentInst:
        return myConceptHardwareComponentInst;
      case LanguageConceptSwitch.HardwareRef:
        return myConceptHardwareRef;
      case LanguageConceptSwitch.IHardwareComponentInst:
        return myConceptIHardwareComponentInst;
      case LanguageConceptSwitch.IMobileRobotInst:
        return myConceptIMobileRobotInst;
      case LanguageConceptSwitch.MobileRobot:
        return myConceptMobileRobot;
      case LanguageConceptSwitch.MobileRobotInst:
        return myConceptMobileRobotInst;
      case LanguageConceptSwitch.NFPProfile:
        return myConceptNFPProfile;
      case LanguageConceptSwitch.NFP_Profile:
        return myConceptNFP_Profile;
      case LanguageConceptSwitch.NFR:
        return myConceptNFR;
      case LanguageConceptSwitch.RunTimeNFRsAnnotation:
        return myConceptRunTimeNFRsAnnotation;
      case LanguageConceptSwitch.Sensors:
        return myConceptSensors;
      case LanguageConceptSwitch.SoftwareComponent:
        return myConceptSoftwareComponent;
      case LanguageConceptSwitch.SoftwareComponentInst:
        return myConceptSoftwareComponentInst;
      case LanguageConceptSwitch.System:
        return myConceptSystem;
      case LanguageConceptSwitch.TaskAssociation3:
        return myConceptTaskAssociation3;
      case LanguageConceptSwitch.TaskNFRAssociation1:
        return myConceptTaskNFRAssociation1;
      case LanguageConceptSwitch.TaskNFRAssociation2:
        return myConceptTaskNFRAssociation2;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationHTypeEnumeration);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActuators() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "Actuators", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7048L);
    b.class_(false, false, false);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845348424");
    b.version(2);
    b.property("type", 0x6a627af554be705aL).type(PrimitiveTypeId.STRING).origin("7665824709845348442").done();
    b.property("id", 0x6a627af554be705fL).type(PrimitiveTypeId.INTEGER).origin("7665824709845348447").done();
    b.aggregate("connect", 0x6a627af554be7058L).target(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, 0x25c82fc5fc3551ceL).optional(true).ordered(true).multiple(true).origin("7665824709845348440").done();
    b.aggregate("nfr", 0x6a627af554bfd498L).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x6a627af554ccd696L).optional(true).ordered(true).multiple(true).origin("7665824709845439640").done();
    b.aggregate("tasks", 0x51f789b6b57024fbL).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fd8L).optional(true).ordered(true).multiple(true).origin("5906340854140773627").done();
    b.aggregate("association", 0x4430c77356927e0eL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c77356927e03L).optional(true).ordered(true).multiple(true).origin("4913646491648818702").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCentralNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "CentralNode", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4db49580d35a9d0aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/5599264617262652682");
    b.version(2);
    b.aggregate("hardware", 0x6a627af554bfd4cbL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7033L).optional(true).ordered(true).multiple(true).origin("7665824709845439691").done();
    b.aggregate("software", 0x6a627af554bfd4ccL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7034L).optional(true).ordered(true).multiple(true).origin("7665824709845439692").done();
    b.aggregate("connect", 0x6a627af554bfd4cdL).target(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, 0x25c82fc5fc3551ceL).optional(true).ordered(true).multiple(true).origin("7665824709845439693").done();
    b.aggregate("nfr", 0x6a627af554bfd4ceL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554d0e736L).optional(true).ordered(true).multiple(true).origin("7665824709845439694").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHTypeIF() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "HTypeIF", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x71a2aa893a59d148L);
    b.interface_();
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/8188294578879189320");
    b.version(2);
    b.property("type", 0x71a2aa893a59d149L).type(MetaIdFactory.dataTypeId(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x71a2aa893a59d06bL)).origin("8188294578879189321").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHardwareComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "HardwareComponent", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7033L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x71a2aa893a59d148L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845348403");
    b.version(2);
    b.aggregate("sensors", 0x6a627af554be704cL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7047L).optional(true).ordered(true).multiple(false).origin("7665824709845348428").done();
    b.aggregate("actuators", 0x6a627af554be704eL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7048L).optional(true).ordered(true).multiple(false).origin("7665824709845348430").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHardwareComponentInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "HardwareComponentInst", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554ca179dL);
    b.class_(false, false, false);
    b.parent(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c03797L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709846112157");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHardwareRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "HardwareRef", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c0a264L);
    b.class_(false, false, false);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845492324");
    b.version(2);
    b.associate("hardware", 0x6a627af554c0a265L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7033L).optional(true).origin("7665824709845492325").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIHardwareComponentInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "IHardwareComponentInst", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c03797L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4cc0746284b34d01L, 0x8adb629ddd3cebd4L, 0x2c5757d10fb47860L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845464983");
    b.version(2);
    b.associate("hardware", 0x6a627af554c0a267L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7033L).optional(false).origin("7665824709845492327").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIMobileRobotInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "IMobileRobotInst", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x51f789b6b5394bcbL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4cc0746284b34d01L, 0x8adb629ddd3cebd4L, 0x2c5757d10fb47860L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/5906340854137179083");
    b.version(2);
    b.associate("mobilerobot", 0x51f789b6b5394bd1L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4db49580d35a9e5cL).optional(false).origin("5906340854137179089").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMobileRobot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "MobileRobot", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4db49580d35a9e5cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/5599264617262653020");
    b.version(2);
    b.aggregate("hardware", 0x6a627af554bfd4a1L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c03797L).optional(true).ordered(true).multiple(true).origin("7665824709845439649").done();
    b.aggregate("software", 0x6a627af554bfd4a3L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c0a269L).optional(true).ordered(true).multiple(true).origin("7665824709845439651").done();
    b.aggregate("connect", 0x6a627af554bfd4a6L).target(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, 0x25c82fc5fc3551ceL).optional(true).ordered(true).multiple(true).origin("7665824709845439654").done();
    b.aggregate("nfr", 0x6a627af554bfd4aaL).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x3ef7a32457f426a6L).optional(true).ordered(true).multiple(true).origin("7665824709845439658").done();
    b.aggregate("tasks", 0x51f789b6b57025c2L).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fd8L).optional(true).ordered(true).multiple(true).origin("5906340854140773826").done();
    b.aggregate("association", 0x4430c7735686274eL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c773568626f9L).optional(true).ordered(true).multiple(true).origin("4913646491648010062").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMobileRobotInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "MobileRobotInst", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x51f789b6b5394bd3L);
    b.class_(false, false, false);
    b.parent(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x51f789b6b5394bcbL);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/5906340854137179091");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNFPProfile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "NFPProfile", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554d0e736L);
    b.class_(false, false, false);
    b.parent(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554d0e733L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709846558518");
    b.version(2);
    b.property("id", 0x5e212680330151f5L).type(PrimitiveTypeId.STRING).origin("6782744845850071541").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNFP_Profile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "NFP_Profile", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554d0e733L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709846558515");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNFR() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "NFR", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x53eb6ec85ab3d640L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/6047048731469272640");
    b.version(2);
    b.property("id", 0x53eb6ec85ab3d641L).type(PrimitiveTypeId.INTEGER).origin("6047048731469272641").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRunTimeNFRsAnnotation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "RunTimeNFRsAnnotation", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554d0e74cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.lang.core.structure.NodeAttribute", 0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2eb1ad060897da54L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709846558540");
    b.version(2);
    b.associate("profile", 0x6a627af554d0e753L).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x6a627af554ccd696L).optional(false).origin("7665824709846558547").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensors() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "Sensors", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7047L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845348423");
    b.version(2);
    b.property("type", 0x6a627af554be7053L).type(PrimitiveTypeId.STRING).origin("7665824709845348435").done();
    b.property("id", 0x6a627af554be7055L).type(PrimitiveTypeId.INTEGER).origin("7665824709845348437").done();
    b.aggregate("connect", 0x6a627af554be7051L).target(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, 0x25c82fc5fc3551ceL).optional(true).ordered(true).multiple(true).origin("7665824709845348433").done();
    b.aggregate("nfr", 0x6a627af554d0e73aL).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x6a627af554ccd696L).optional(true).ordered(true).multiple(true).origin("7665824709846558522").done();
    b.aggregate("tasks", 0x51f789b6b56d1065L).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fd8L).optional(true).ordered(true).multiple(true).origin("5906340854140571749").done();
    b.aggregate("association", 0x4430c77356927e09L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c77356927e03L).optional(true).ordered(true).multiple(true).origin("4913646491648818697").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSoftwareComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "SoftwareComponent", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7034L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845348404");
    b.version(2);
    b.aggregate("nfr", 0x6a627af554bfd4afL).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x6a627af554ccd696L).optional(true).ordered(true).multiple(true).origin("7665824709845439663").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSoftwareComponentInst() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "SoftwareComponentInst", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c0a269L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4cc0746284b34d01L, 0x8adb629ddd3cebd4L, 0x2c5757d10fb47860L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/7665824709845492329");
    b.version(2);
    b.associate("software", 0x6a627af554c0a26fL).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554be7034L).optional(false).origin("7665824709845492335").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSystem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "System", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x51f789b6b5394bc1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/5906340854137179073");
    b.version(2);
    b.aggregate("externalHardware", 0x51f789b6b5394bc6L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x6a627af554c03797L).optional(true).ordered(true).multiple(true).origin("5906340854137179078").done();
    b.aggregate("robots", 0x51f789b6b5394bc8L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x51f789b6b5394bcbL).optional(true).ordered(true).multiple(true).origin("5906340854137179080").done();
    b.aggregate("requirements", 0x4430c773567480e0L).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fddL).optional(true).ordered(true).multiple(true).origin("4913646491646853344").done();
    b.aggregate("NFR", 0x51f789b6b54d18a6L).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x51f789b6b54b491dL).optional(true).ordered(true).multiple(true).origin("5906340854138476710").done();
    b.aggregate("connections", 0x51f789b6b563e002L).target(0xafce36b8c6cd4f1bL, 0xb70d0ef3d6aa2b6fL, 0x51f789b6b562d996L).optional(true).ordered(true).multiple(true).origin("5906340854139969538").done();
    b.aggregate("association", 0x4430c77356974825L).target(0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c773569747ebL).optional(true).ordered(true).multiple(true).origin("4913646491649132581").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTaskAssociation3() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "TaskAssociation3", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c773569747ebL);
    b.class_(false, false, false);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/4913646491649132523");
    b.version(2);
    b.associate("tasks", 0x4430c773569747eeL).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fddL).optional(false).origin("4913646491649132526").done();
    b.aggregate("NFRs", 0x4430c773569747ecL).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x4430c773569616e8L).optional(true).ordered(true).multiple(true).origin("4913646491649132524").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTaskNFRAssociation1() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "TaskNFRAssociation1", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c77356927e03L);
    b.class_(false, false, false);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/4913646491648818691");
    b.version(2);
    b.associate("tasks", 0x4430c77356927e06L).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fd8L).optional(false).origin("4913646491648818694").done();
    b.aggregate("NFRs", 0x4430c77356927e04L).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x4430c773569164c0L).optional(true).ordered(true).multiple(true).origin("4913646491648818692").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTaskNFRAssociation2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Component_v1", "TaskNFRAssociation2", 0x79fb875b5c4f4986L, 0x892e2475e9d0c842L, 0x4430c773568626f9L);
    b.class_(false, false, true);
    b.origin("r:c52bfaaf-3aa5-4582-82a8-936559e2dd69(Component_v1.structure)/4913646491648009977");
    b.version(2);
    b.associate("tasks", 0x4430c773568626faL).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x51f789b6b56d0fd8L).optional(false).origin("4913646491648009978").done();
    b.aggregate("NFRs", 0x4430c773568c5451L).target(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x4430c773568b5292L).optional(true).ordered(true).multiple(true).origin("4913646491648414801").done();
    return b.create();
  }
}
