package NFR.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_ArchitecturalNFRs;
  private ConceptPresentation props_CommunicationQoS;
  private ConceptPresentation props_Expression2;
  private ConceptPresentation props_GlobalNFRFunction;
  private ConceptPresentation props_GlobalRunTimeNFRs;
  private ConceptPresentation props_GlobalRunTimeNFRsInst;
  private ConceptPresentation props_IGlobalRunTimeNFRsInst;
  private ConceptPresentation props_ILocalRunTimeNFRs2Inst;
  private ConceptPresentation props_ILocalRunTimeNFRsInst;
  private ConceptPresentation props_LocalNFRFunction;
  private ConceptPresentation props_LocalRunTimeNFRs;
  private ConceptPresentation props_LocalRunTimeNFRs2;
  private ConceptPresentation props_LocalRunTimeNFRs2Inst;
  private ConceptPresentation props_LocalRunTimeNFRsInst;
  private ConceptPresentation props_RunTimeNFRReference;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ArchitecturalNFRs:
        if (props_ArchitecturalNFRs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ArchitecturalNFRs");
          props_ArchitecturalNFRs = cpb.create();
        }
        return props_ArchitecturalNFRs;
      case LanguageConceptSwitch.CommunicationQoS:
        if (props_CommunicationQoS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("CommunicationQoS");
          props_CommunicationQoS = cpb.create();
        }
        return props_CommunicationQoS;
      case LanguageConceptSwitch.Expression2:
        if (props_Expression2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Expression2");
          props_Expression2 = cpb.create();
        }
        return props_Expression2;
      case LanguageConceptSwitch.GlobalNFRFunction:
        if (props_GlobalNFRFunction == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_GlobalNFRFunction = cpb.create();
        }
        return props_GlobalNFRFunction;
      case LanguageConceptSwitch.GlobalRunTimeNFRs:
        if (props_GlobalRunTimeNFRs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_GlobalRunTimeNFRs = cpb.create();
        }
        return props_GlobalRunTimeNFRs;
      case LanguageConceptSwitch.GlobalRunTimeNFRsInst:
        if (props_GlobalRunTimeNFRsInst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_GlobalRunTimeNFRsInst = cpb.create();
        }
        return props_GlobalRunTimeNFRsInst;
      case LanguageConceptSwitch.IGlobalRunTimeNFRsInst:
        if (props_IGlobalRunTimeNFRsInst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IGlobalRunTimeNFRsInst = cpb.create();
        }
        return props_IGlobalRunTimeNFRsInst;
      case LanguageConceptSwitch.ILocalRunTimeNFRs2Inst:
        if (props_ILocalRunTimeNFRs2Inst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ILocalRunTimeNFRs2Inst = cpb.create();
        }
        return props_ILocalRunTimeNFRs2Inst;
      case LanguageConceptSwitch.ILocalRunTimeNFRsInst:
        if (props_ILocalRunTimeNFRsInst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ILocalRunTimeNFRsInst = cpb.create();
        }
        return props_ILocalRunTimeNFRsInst;
      case LanguageConceptSwitch.LocalNFRFunction:
        if (props_LocalNFRFunction == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LocalNFRFunction = cpb.create();
        }
        return props_LocalNFRFunction;
      case LanguageConceptSwitch.LocalRunTimeNFRs:
        if (props_LocalRunTimeNFRs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LocalRunTimeNFRs = cpb.create();
        }
        return props_LocalRunTimeNFRs;
      case LanguageConceptSwitch.LocalRunTimeNFRs2:
        if (props_LocalRunTimeNFRs2 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LocalRunTimeNFRs2 = cpb.create();
        }
        return props_LocalRunTimeNFRs2;
      case LanguageConceptSwitch.LocalRunTimeNFRs2Inst:
        if (props_LocalRunTimeNFRs2Inst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LocalRunTimeNFRs2Inst = cpb.create();
        }
        return props_LocalRunTimeNFRs2Inst;
      case LanguageConceptSwitch.LocalRunTimeNFRsInst:
        if (props_LocalRunTimeNFRsInst == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LocalRunTimeNFRsInst = cpb.create();
        }
        return props_LocalRunTimeNFRsInst;
      case LanguageConceptSwitch.RunTimeNFRReference:
        if (props_RunTimeNFRReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xddad85b58f7640d8L, 0x9a0dbd322c713e77L, 0x3ef7a3245800fbfeL, 0x3ef7a3245800fbffL, "field", "", "");
          props_RunTimeNFRReference = cpb.create();
        }
        return props_RunTimeNFRReference;
    }
    return null;
  }
}
