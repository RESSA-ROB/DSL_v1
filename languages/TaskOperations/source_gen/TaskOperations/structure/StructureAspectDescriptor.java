package TaskOperations.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDeliver = createDescriptorForDeliver();
  /*package*/ final ConceptDescriptor myConceptGrasp = createDescriptorForGrasp();
  /*package*/ final ConceptDescriptor myConceptMove = createDescriptorForMove();
  /*package*/ final ConceptDescriptor myConceptTaskDelivery = createDescriptorForTaskDelivery();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDeliver, myConceptGrasp, myConceptMove, myConceptTaskDelivery);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Deliver:
        return myConceptDeliver;
      case LanguageConceptSwitch.Grasp:
        return myConceptGrasp;
      case LanguageConceptSwitch.Move:
        return myConceptMove;
      case LanguageConceptSwitch.TaskDelivery:
        return myConceptTaskDelivery;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDeliver() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TaskOperations", "Deliver", 0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335bf1L);
    b.class_(false, false, false);
    b.origin("r:29f7a628-28dd-48e5-91bd-80e6f08a79f0(TaskOperations.structure)/2722478502131751921");
    b.version(2);
    b.property("dest", 0x25c82fc5fc335bf2L).type(PrimitiveTypeId.STRING).origin("2722478502131751922").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGrasp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TaskOperations", "Grasp", 0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335befL);
    b.class_(false, false, false);
    b.origin("r:29f7a628-28dd-48e5-91bd-80e6f08a79f0(TaskOperations.structure)/2722478502131751919");
    b.version(2);
    b.property("object", 0x25c82fc5fc335bf4L).type(PrimitiveTypeId.STRING).origin("2722478502131751924").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMove() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TaskOperations", "Move", 0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335bf0L);
    b.class_(false, false, false);
    b.origin("r:29f7a628-28dd-48e5-91bd-80e6f08a79f0(TaskOperations.structure)/2722478502131751920");
    b.version(2);
    b.property("path", 0x25c82fc5fc335bf6L).type(PrimitiveTypeId.STRING).origin("2722478502131751926").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTaskDelivery() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TaskOperations", "TaskDelivery", 0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335becL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:29f7a628-28dd-48e5-91bd-80e6f08a79f0(TaskOperations.structure)/2722478502131751916");
    b.version(2);
    b.aggregate("grasp", 0x25c82fc5fc335bf8L).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335befL).optional(false).ordered(true).multiple(false).origin("2722478502131751928").done();
    b.aggregate("move", 0x25c82fc5fc335bfaL).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335bf0L).optional(true).ordered(true).multiple(true).origin("2722478502131751930").done();
    b.aggregate("deliver", 0x25c82fc5fc335bfdL).target(0xcf635ce519764c6bL, 0xb1c5f43814e251b9L, 0x25c82fc5fc335bf1L).optional(false).ordered(true).multiple(false).origin("2722478502131751933").done();
    return b.create();
  }
}
